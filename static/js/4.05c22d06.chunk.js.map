{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","name","Message","messagesContainer","left","src","avatar","alt","right","message","maxLength50","maxLengthCreator","reduxForm","form","newMessageContainer","onSubmit","handleSubmit","newMessageText","Field","component","Textarea","validate","required","placeholder","mapStateToPropsForRedirect","state","isAuth","auth","DialogsContainer","compose","connect","dialogsPage","dispatch","sendMessage","newMessageBody","Component","RedirectComponent","this","restProps","React","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogContainer","dialogItems","values"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,gBAAkB,iCAAiC,YAAc,6BAA6B,SAAW,0BAA0B,oBAAsB,uC,oBCA9MD,EAAOC,QAAU,CAAC,kBAAoB,mCAAmC,KAAO,sBAAsB,MAAQ,yB,+JCQjGC,EAAuC,SAACC,GACnD,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,qBAAKC,UAAWC,IAAEC,OAAlB,SACE,cAAC,IAAD,CAASC,GAAIL,EAAb,SAAoBD,EAAMO,U,kBCNnBC,EAAiC,SAACR,GAG7C,OAAO,sBAAKG,UAAWC,IAAEK,kBAAlB,UACL,qBAAKN,UAAWC,IAAEM,KAAlB,SACE,qBAAKC,IAAKX,EAAMY,OAAQC,IAAI,OAE9B,qBAAKV,UAAWC,IAAEU,MAAlB,SACGd,EAAMe,c,iCCRPC,EAAcC,YAAiB,IAmBtBC,cAA+B,CAACC,KAAM,2BAAtCD,EAjB0D,SAAClB,GACtE,OACI,sBAAMG,UAAWC,IAAEgB,oBAAqBC,SAAUrB,EAAMsB,aAAxD,SACI,sBAAKnB,UAAWC,IAAEmB,eAAlB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBT,KAAM,iBAAkBsB,YAAY,yBAE/C,8BACI,oD,oECVdC,EAA6B,SAACC,GAClC,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,YCoBVE,EAAmBC,YAC5BC,aAhBoB,SAACL,GACrB,MAAO,CACHM,YAAaN,EAAMM,gBAGA,SAACC,GACxB,MAAO,CACHC,YAAa,SAACC,GACVF,EAASC,YAAYC,UDT1B,SAA8BC,GAA8B,IAE3DC,EAF0D,4JAG9D,WACE,MAA6BC,KAAK3C,MAA7BgC,EAAL,EAAKA,OAAWY,EAAhB,iBAEA,OAAKZ,EAEE,cAACS,EAAD,eAAeG,IAFF,cAAC,IAAD,CAAUtC,GAAI,eAN0B,GAEhCuC,IAAMJ,WAYtC,OAFqCL,YAAQN,EAARM,CAAoCM,KCI3CP,ECrBmB,SAACnC,GAChD,IAAI+B,EAAQ/B,EAAMqC,YAEdS,EAAkBf,EAAMgB,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAuB/C,GAAI+C,EAAE/C,GAAIK,KAAM0C,EAAE1C,MAAxB0C,EAAE/C,OAC5DgD,EAAmBnB,EAAMoB,SAASH,KAAI,SAAAI,GAAC,OACvC,cAAC,EAAD,CACSrC,QAASqC,EAAErC,QACXH,OAAQwC,EAAExC,QAFLwC,EAAElD,OAWpB,OACI,sBAAKC,UAAWC,IAAE2C,QAAlB,UACI,sBAAK5C,UAAWC,IAAEiD,gBAAlB,UACI,qBAAKlD,UAAWC,IAAEkD,YAAlB,SACKR,IAEL,qBAAK3C,UAAWC,IAAE+C,SAAlB,SACI,8BAAMD,SAId,cAAC,EAAD,CAAgB7B,SAjBF,SAACkC,GACnBvD,EAAMuC,YAAYgB,EAAOf","file":"static/js/4.05c22d06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__q7Cz8\",\"dialogContainer\":\"Dialogs_dialogContainer__3N0OW\",\"dialogItems\":\"Dialogs_dialogItems__2bpnP\",\"messages\":\"Dialogs_messages__BWbcs\",\"newMessageContainer\":\"Dialogs_newMessageContainer__BDgEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Message_messagesContainer__1kBI7\",\"left\":\"Message_left__3zkb9\",\"right\":\"Message_right__YJhyx\"};","import React from 'react';\r\nimport s from '../Dialogs.module.scss';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogItemType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nexport const DialogItem: React.FC<DialogItemType> = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport s from './Message.module.scss'\r\n\r\ntype MessageType = {\r\n  message: string\r\n  avatar: string\r\n}\r\nexport const Message: React.FC<MessageType> = (props) => {\r\n\r\n\r\n  return <div className={s.messagesContainer}>\r\n    <div className={s.left}>\r\n      <img src={props.avatar} alt=\"\"/>\r\n    </div>\r\n    <div className={s.right}>\r\n      {props.message}\r\n\r\n    </div>\r\n\r\n  </div>\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport s from \"../Dialogs.module.scss\";\r\nimport {DialogsFormDataType} from \"../Dialogs\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<DialogsFormDataType>> = (props) => {\r\n    return (\r\n        <form className={s.newMessageContainer} onSubmit={props.handleSubmit}>\r\n            <div className={s.newMessageText}>\r\n                <div>\r\n                    <Field component={Textarea}\r\n                           validate={[required, maxLength50]}\r\n                           name={'newMessageBody'} placeholder=\"Enter your message\"/>\r\n                </div>\r\n                <div>\r\n                    <button>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm<DialogsFormDataType>({form: 'dialog-add-message-form'})(AddMessageForm)\r\n","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppRootStateType): MapStatePropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\r\n\r\n  class RedirectComponent extends React.Component<MapStatePropsType> {\r\n    render() {\r\n      let {isAuth, ...restProps} = this.props\r\n\r\n      if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n      return <Component {...restProps as T}/>\r\n    }\r\n  }\r\n\r\n  let ConneсtedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConneсtedAuthRedirectComponent\r\n}","import {InitialStateDialogsType, sendMessage} from '../../redux/dialogs-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {Dialogs} from './Dialogs';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {ComponentType} from \"react\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: InitialStateDialogsType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) => {\r\n            dispatch(sendMessage(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nexport const DialogsContainer = compose<ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import React from 'react';\r\nimport s from './Dialogs.module.scss'\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {Message} from './Message/Message';\r\nimport {DialogsPropsType} from './DialogsContainer';\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nexport type DialogsFormDataType = {\r\n    newMessageBody: string\r\n}\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\r\n    let messagesElements = state.messages.map(m =>\r\n        <Message key={m.id}\r\n                 message={m.message}\r\n                 avatar={m.avatar}\r\n        />)\r\n\r\n    const addNewMessage = (values: DialogsFormDataType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    // if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogContainer}>\r\n                <div className={s.dialogItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}