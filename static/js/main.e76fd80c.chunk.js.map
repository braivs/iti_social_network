{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/Message/Message.module.scss","components/Profile/MyPosts/Post/Post.module.css","components/Sidebar/FriendItem/FriendsItem.module.scss","components/Profile/MyPosts/MyPost.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Sidebar/Sidebar.module.scss","assets/images/ava.png","redux/dialogs-reducer.ts","redux/sidebar-reducer.ts","redux/profile-reducer.ts","assets/images/main.jpg","redux/users-reducer.ts","redux/redux-store.ts","assets/images/user.png","components/Users/UsersContainer.tsx","components/Users/Users.tsx","assets/images/logo.png","components/Header/Header.tsx","components/Sidebar/FriendItem/FriendItem.tsx","components/Sidebar/SidebarContainer.tsx","components/Sidebar/Sidebar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Profile/ProfileInfo/ProfileInfoContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx"],"names":["module","exports","initialState","dialogs","id","name","messages","message","author","avatar","ava","newMessageAuthor","newMessageBody","dialogsReducer","state","action","type","newAuthor","body","newMessage","Date","getTime","friends","sidebarReducer","top","imgSrc","imgAlt","description","posts","likesCount","newPostText","profileReducer","newPost","newText","users","usersReducer","map","u","userId","followed","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","store","createStore","window","UsersContainer","connect","dispatch","follow","followAC","unfollow","unfollowAC","setUsers","setUsersAC","props","length","axios","get","then","responce","data","items","src","photos","small","userPhoto","alt","className","s","onClick","status","Header","header","logo","FriendItem","friendContainer","SidebarContainer","FriendsElements","f","navbarContainer","nav","item","to","activeClassName","active","friendsContainer","DialogItem","path","dialog","Message","messagesContainer","left","right","DialogsContainer","updateNewMessageAuthor","updateNewMessageAuthorCreator","updateNewMessageBody","updateNewMessageBodyCreator","sendMessage","dialogsElements","d","messagesElements","m","dialogItems","newMessageContainer","placeholder","onChange","e","target","value","newMessageText","ProfileInfoContainer","descriptionBlock","Post","text","likes","MyPostsContainer","updateNewPostText","updateNewPostTextActionCreator","addPost","postElements","p","newPostElement","React","createRef","postsBlock","current","ref","Profile","content","News","Music","Settings","App","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e76fd80c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2Gkkf\",\"dialogItems\":\"Dialogs_dialogItems__3S8JU\",\"messages\":\"Dialogs_messages__1J3nn\",\"newMessageContainer\":\"Dialogs_newMessageContainer__2ydUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesContainer\":\"Message_messagesContainer__1Dxez\",\"left\":\"Message_left__3pm2R\",\"right\":\"Message_right__ZxiwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendContainer\":\"FriendsItem_friendContainer__3Z5-s\",\"avatar\":\"FriendsItem_avatar__7g24v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPost_postsBlock__2nB61\",\"posts\":\"MyPost_posts__3x-To\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Sidebar_navbarContainer__EqV90\",\"nav\":\"Sidebar_nav__18KQo\",\"item\":\"Sidebar_item__NlFy1\",\"active\":\"Sidebar_active__9wFJE\",\"friends\":\"Sidebar_friends__31Mf1\",\"friendsContainer\":\"Sidebar_friendsContainer__1P_qh\"};","export default __webpack_public_path__ + \"static/media/ava.485fc51f.png\";","import {ActionTypes} from '../types/entities';\nimport ava from '../assets/images/ava.png'\n\nexport type MessagesType = {\n  id: number\n  message: string\n  author: string\n  avatar: string\n}\ntype DialogsType = {\n  id: number\n  name: string\n}\n\nexport type DialogsPageType = {\n  dialogs: Array<DialogsType>\n  messages: Array<MessagesType>\n  newMessageAuthor: string\n  newMessageBody: string\n}\n\nlet initialState: DialogsPageType = {\n  dialogs: [\n    {id: 1, name: 'BriWS'},\n    {id: 2, name: 'Masha'},\n    {id: 3, name: 'Lera'},\n    {id: 4, name: 'Liza'},\n    {id: 5, name: 'Diana'},\n    {id: 6, name: 'Kristina'}\n  ],\n  messages: [\n    {id: 1, message: 'Lorem ipsum dolor sit amet', author: 'Masha', avatar: ava},\n    {id: 2, message: 'Lorem ipsum dolor sit amet', author: 'Briws', avatar: ava},\n    {id: 3, message: 'Lorem ipsum dolor sit amet', author: 'Lera', avatar: ava},\n    {id: 4, message: 'Lorem ipsum dolor sit amet', author: 'Liza', avatar: ava}\n  ],\n  newMessageAuthor: '',\n  newMessageBody: ''\n}\n\nconst dialogsReducer = (state: DialogsPageType = initialState, action: ActionTypes): DialogsPageType => {\n  switch (action.type) {\n    case 'UPDATE-NEW-MESSAGE-AUTHOR': {\n      return {\n        ...state,\n        newMessageAuthor: action.newAuthor\n      }\n    }\n    case 'UPDATE_NEW_MESSAGE_BODY': {\n      return {\n        ...state,\n        newMessageBody: action.body\n      };\n    }\n    case 'SEND-MESSAGE': {\n      let body = state.newMessageBody;\n      let author = state.newMessageAuthor;\n      const newMessage: MessagesType = {\n        id: new Date().getTime(),\n        message: body,\n        author: author,\n        avatar: ava\n      };\n      return {\n        ...state,\n        newMessageAuthor: '',\n        newMessageBody: '',\n        messages: [...state.messages, newMessage]\n      }\n    }\n    default:\n      return state;\n  }\n}\n\n// Action Creators:\nexport const sendMessageCreator = () => ({type: 'SEND-MESSAGE'} as const)\nexport const updateNewMessageAuthorCreator = (author: string) => {\n  return {\n    type: 'UPDATE-NEW-MESSAGE-AUTHOR', newAuthor: author\n  } as const\n}\nexport const updateNewMessageBodyCreator = (body: string) => {\n  return {\n    type: 'UPDATE_NEW_MESSAGE_BODY',\n    body: body\n  } as const\n    }\n\nexport default dialogsReducer;\n","import {ActionTypes} from '../types/entities';\nimport ava from '../assets/images/ava.png'\n\ntype FriendsType = {\n  id: number\n  name: string,\n  avatar: string\n}\nexport type SidebarType = {\n  friends: Array<FriendsType>\n}\n\nlet initialState: SidebarType = {\n  friends: [\n    { id: 1, name: 'Liza', avatar: ava},\n    { id: 2, name: 'Masha', avatar: ava},\n    { id: 3, name: 'Diana', avatar: ava},\n  ]\n}\n\nconst sidebarReducer = (state: SidebarType = initialState, action: ActionTypes): SidebarType => {\n\n  return state;\n}\n\nexport default sidebarReducer;","import {ActionTypes} from '../types/entities';\nimport mainImg from '../assets/images/main.jpg'\n\nexport type TopType = {\n  imgSrc: string\n  imgAlt: string\n  description: string\n}\nexport type PostsType = {\n  id: number\n  message: string\n  likesCount: number\n}\nexport type ProfilePageType = {\n  top: TopType\n  posts: Array<PostsType>\n  newPostText: string\n}\n\nlet initialState: ProfilePageType = {\n  top: {\n    imgSrc: mainImg,\n    imgAlt: '',\n    description: 'ava + description'\n  },\n  posts: [\n    {id: 1, message: 'I will be React Developer!', likesCount: 12},\n    {id: 2, message: 'It\\'s my first post', likesCount: 11},\n    {id: 3, message: 'Bugaga', likesCount: 5},\n    {id: 4, message: 'Dada', likesCount: 1}\n  ],\n  newPostText: ''\n}\n\nconst profileReducer = (state: ProfilePageType = initialState, action: ActionTypes): ProfilePageType => {\n  switch (action.type) {\n    case 'ADD-POST': {\n      const newPost: PostsType = {\n        id: new Date().getTime(),\n        message: state.newPostText,\n        likesCount: 0\n      };\n      return {\n        ...state,\n        posts: [...state.posts, newPost],\n        newPostText: ''\n      };\n    }\n    case 'UPDATE-NEW-POST-TEXT': {\n      return {\n        ...state,\n        newPostText: action.newText\n      };\n    }\n    default:\n      return state;\n  }\n}\n\n// Action Creators:\nexport const addPostActionCreator = () => ({type: 'ADD-POST'} as const)\nexport const updateNewPostTextActionCreator = (text: string) => ({\n    type: 'UPDATE-NEW-POST-TEXT', newText: text\n} as const)\n\nexport default profileReducer\n\n\n","export default __webpack_public_path__ + \"static/media/main.d266ffeb.jpg\";","import {ActionTypes} from '../types/entities';\n\ntype locationType = {\n  city: string\n  country: string\n}\n\ntype photosType = {\n  small: string\n  large: string\n}\n\n\nexport type UserType = {\n  id: number\n  photos: photosType\n  followed: boolean\n  name: string\n  status: string\n  location: locationType\n}\n\nexport type UsersPageType = {\n  users: Array<UserType>\n}\n\nconst initialState: UsersPageType = {\n  users: []\n}\n\nconst usersReducer = (state: UsersPageType = initialState, action: ActionTypes): UsersPageType => {\n  switch (action.type) {\n    case 'FOLLOW':\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {...u, followed: true}\n          }\n          return u;\n        })\n      }\n    case 'UNFOLLOW':\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return {...u, followed: false}\n          }\n          return u;\n        })\n      }\n    case 'SET-USERS':\n      return {...state, users: [...state.users, ...action.users]}\n    default:\n      return state;\n  }\n}\n\nexport const followAC = (userId: number) => ({type: 'FOLLOW', userId} as const)\nexport const unfollowAC = (userId: number) => ({type: 'UNFOLLOW', userId} as const)\nexport const setUsersAC = (users: Array<UserType>) => ({type: 'SET-USERS', users} as const)\n\nexport default usersReducer\n\n\n","import {combineReducers, createStore} from 'redux';\nimport dialogsReducer from './dialogs-reducer';\nimport sidebarReducer from './sidebar-reducer';\nimport profileReducer from './profile-reducer';\nimport usersReducer from './users-reducer';\n\nconst rootReducer = combineReducers({ //этот объект надо воспринимать как state\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer\n  })\n\nexport type AppStateType = ReturnType<typeof rootReducer>\n\n// создаёт внутри себя state у которого есть 3 свойства выше\nexport const store = createStore(rootReducer);\n\n// @ts-ignore\nwindow.store = store;","export default __webpack_public_path__ + \"static/media/user.b9b5b31c.png\";","import {connect} from 'react-redux';\nimport {followAC, setUsersAC, unfollowAC, UserType} from '../../redux/users-reducer';\nimport {Dispatch} from 'redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport {Users} from './Users';\n\ntype MapStatePropsType = {\n  users: Array<UserType>\n}\n\ntype MapDispatchToPropsType = {\n  follow: (userId: number) => void\n  unfollow: (userId: number) => void\n  setUsers: (users: Array<UserType>) => void\n}\n\nexport type UsersPropsType = MapStatePropsType & MapDispatchToPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    users: state.usersPage.users\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\n  return {\n    follow: (userId: number) => {\n      dispatch(followAC(userId))\n    },\n    unfollow: (userId: number) => {\n      dispatch(unfollowAC(userId))\n    },\n    setUsers: (users: Array<UserType>) => {\n      dispatch(setUsersAC(users))\n    }\n  }\n}\n\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);","import React from 'react';\nimport s from './Users.module.css'\nimport userPhoto from '../../assets/images/user.png';\nimport {UsersPropsType} from './UsersContainer';\n// import * as axios from 'axios';\nimport axios from 'axios';\n\nexport const Users: React.FC<UsersPropsType> = (props) => {\n\n  if (props.users.length === 0) {\n    axios.get('https://social-network.samuraijs.com/api/1.0/users').then(responce => {\n      props.setUsers(responce.data.items)\n    });\n  }\n\n  return <div>\n    {\n      props.users.map(u => <div key={u.id}>\n        <span>\n          <div>\n            <img src={u.photos.small !== null ? u.photos.small : userPhoto} alt={'userPhoto'} className={s.userPhoto}/>\n          </div>\n          <div>\n            {u.followed\n              ? <button onClick={() => {\n                props.unfollow(u.id)\n              }}>Unfollow</button>\n              : <button onClick={() => {\n                props.follow(u.id)\n              }}>Follow</button>}\n          </div>\n        </span>\n        <span>\n          <span>\n            <div>{u.name}</div>\n            <div>{u.status}</div>\n          </span>\n          <span>\n            <div>{'u.location.country'}</div>\n            <div>{'u.location.city'}</div>\n          </span>\n        </span>\n      </div>)\n    }\n  </div>\n}","export default __webpack_public_path__ + \"static/media/logo.8a6a21ee.png\";","import React from 'react';\nimport s from './Header.module.css';\nimport logo from '../../assets/images/logo.png'\n\nexport const Header = () => {\n  return <header className={s.header}>\n    <img src={logo} alt=\"\"/>\n  </header>\n}","import React from 'react';\nimport s from './FriendsItem.module.scss'\n\ntype FriendItemType = {\n  id: number\n  name: string,\n  avatar: string\n}\n\nexport const FriendItem:React.FC<FriendItemType> = (props) => {\n  return <div className={s.friendContainer}>\n    <img src={props.avatar} alt=\"\" className={s.avatar}/>\n    {props.name}\n  </div>\n}","import {AppStateType} from '../../redux/redux-store';\nimport {connect} from 'react-redux';\nimport {SidebarType} from '../../redux/sidebar-reducer';\nimport {Sidebar} from './Sidebar';\n\ntype MapStatePropsType = {\n  sidebar: SidebarType\n}\n\nexport type SidebarPropsType = MapStatePropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    sidebar: state.sidebar\n  }\n}\n\nexport const SidebarContainer = connect(mapStateToProps)(Sidebar)","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Sidebar.module.scss'\nimport {FriendItem} from './FriendItem/FriendItem';\nimport {SidebarPropsType} from './SidebarContainer';\n\nexport const Sidebar:React.FC<SidebarPropsType> = (props) => {\n\n  let FriendsElements = props.sidebar.friends.map(f => <FriendItem key={f.id} id={f.id} name={f.name} avatar={f.avatar}/>)\n\n  return (\n    <div className={s.navbarContainer}>\n      <nav className={s.nav}>\n        <div className={s.item}>\n          <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to=\"/dialogs\" activeClassName={s.active}>Dialogs</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to='/news' activeClassName={s.active}>News</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\n        </div>\n        <div className={s.item}>\n          <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\n        </div>\n      </nav>\n      <div className={s.friends}>\n        <h3>Friends</h3>\n        <div className={s.friendsContainer}>{FriendsElements}</div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport s from '../Dialogs.module.scss';\nimport {NavLink} from 'react-router-dom';\n\ntype DialogItemType = {\n  id: number\n  name: string\n}\n\nexport const DialogItem: React.FC<DialogItemType> = (props) => {\n  let path = '/dialogs/' + props.id;\n  return (\n    <div className={s.dialog}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  )\n}","import React from 'react';\nimport s from './Message.module.scss'\n\ntype MessageType = {\n  message: string\n  author: string\n  avatar: string\n}\nexport const Message: React.FC<MessageType> = (props) => {\n\n\n  return <div className={s.messagesContainer}>\n    <div className={s.left}>\n      <img src={props.avatar} alt=\"\"/>\n      {props.author}\n    </div>\n    <div className={s.right}>\n      {props.message}\n\n    </div>\n\n  </div>\n}","import {\n  DialogsPageType,\n  sendMessageCreator,\n  updateNewMessageAuthorCreator,\n  updateNewMessageBodyCreator\n} from '../../redux/dialogs-reducer';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../../redux/redux-store';\nimport {Dispatch} from 'redux';\nimport {Dialogs} from './Dialogs';\n\ntype MapStatePropsType = {\n  dialogsPage: DialogsPageType\n}\n\ntype MapDispatchPropsType = {\n  updateNewMessageAuthor: (author: string) => void\n  updateNewMessageBody: (body: string) => void\n  sendMessage: () => void\n}\n\nconst mapStateToProps = (state: AppStateType):MapStatePropsType => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\n\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n  return {\n    updateNewMessageAuthor: (author: string) => {\n      dispatch(updateNewMessageAuthorCreator(author));\n    },\n    updateNewMessageBody: (body: string) => {\n      dispatch(updateNewMessageBodyCreator(body));\n    },\n    sendMessage: () => {\n      dispatch(sendMessageCreator())\n    }\n  }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps )(Dialogs);","import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.scss'\nimport {DialogItem} from './DialogItem/DialogItem';\nimport {Message} from './Message/Message';\nimport {DialogsPropsType} from './DialogsContainer';\n\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\n  let state = props.dialogsPage;\n\n  let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name}/>)\n  let messagesElements = state.messages.map(m =>\n    <Message key={m.id}\n             message={m.message}\n             author={m.author}\n             avatar={m.avatar}\n    />)\n  let newMessageAuthor = state.newMessageAuthor;\n  let newMessageBody = state.newMessageBody;\n\n  let onSendMessageClick = () => {\n    props.sendMessage();\n  }\n\n  const onNewAuthorChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    let author = e.target.value;\n    props.updateNewMessageAuthor(author)\n  }\n  const onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    let body = e.target.value;\n    props.updateNewMessageBody(body)\n  }\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogItems}>\n        {dialogsElements}\n      </div>\n      <div className={s.messages}>\n        {messagesElements}\n        <div className={s.newMessageContainer}>\n          <div className={s.newMessageAuthor}>\n            <div>Author:</div>\n            <textarea placeholder=\"Enter your name\" onChange={onNewAuthorChange} value={newMessageAuthor}/>\n          </div>\n          <div className={s.newMessageText}>\n            <div>Text:</div>\n            <textarea placeholder=\"Enter your message\" onChange={onNewMessageChange} value={newMessageBody}/>\n          </div>\n          <button onClick={onSendMessageClick}>Send</button>\n        </div>\n      </div>\n    </div>\n  )\n}","import {connect} from 'react-redux';\nimport {AppStateType} from '../../../redux/redux-store';\nimport {TopType} from '../../../redux/profile-reducer';\nimport {ProfileInfo} from './ProfileInfo';\n\ntype MapStatePropsType = {\n  top: TopType\n}\n\nexport type ProfileInfoPropsType = MapStatePropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    top: state.profilePage.top\n  }\n}\n\nexport const ProfileInfoContainer = connect(mapStateToProps)(ProfileInfo)","import React from 'react';\nimport s from './ProfileInfo.module.css'\nimport {ProfileInfoPropsType} from './ProfileInfoContainer';\n\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\n  let element = <>\n    <img src={props.top.imgSrc} alt=\"\"/>\n    <div className={s.descriptionBlock}>\n      ava + description\n    </div>\n  </>;\n  return element\n}","import React from 'react';\nimport s from './Post.module.css'\nimport ava from '../../../../assets/images/ava.png'\n\nexport type PostType = {\n  message: string\n  likesCount: number\n}\n\nconst Post: React.FC<PostType> = (props) => {\n  return (\n    <div>\n      <div className={s.item}>\n        <img src={ava} alt=\"\"/>\n        <div>\n          <div className={s.text}>{props.message}</div>\n          <div className={s.likes}>Likes: {props.likesCount}</div>\n        </div>\n      </div>\n      <span>like</span>\n    </div>\n  )\n}\n\nexport default Post;","import {addPostActionCreator, PostsType, updateNewPostTextActionCreator} from '../../../redux/profile-reducer';\nimport {connect} from 'react-redux';\nimport {AppStateType} from '../../../redux/redux-store';\nimport {Dispatch} from 'redux';\nimport {MyPosts} from './MyPosts';\n\ntype MapStatePropsType = {\n  posts: Array<PostsType>\n  newPostText: string\n}\n\ntype MapDispatchPropsType = {\n  updateNewPostText:(text: string) => void\n  addPost: () => void\n}\n\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n  return {\n    updateNewPostText: (text: string) => {\n      let action = updateNewPostTextActionCreator(text);\n      dispatch(action)\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    }\n  }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from 'react';\nimport Post from './Post/Post';\nimport s from './MyPost.module.css'\nimport {MyPostsPropsType} from './MyPostsContainer';\n\nexport const MyPosts: React.FC<MyPostsPropsType> = (props) => {\n  let postElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\n\n  let newPostElement = React.createRef<HTMLTextAreaElement>();\n\n  let onAddPost = () => {\n    props.addPost();\n  }\n\n  let onPostChange = () => {\n    if (newPostElement.current) { // current - ссылается на нативный html элемент\n      let text = newPostElement.current.value;\n      props.updateNewPostText(text)\n    }\n  }\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <div>\n        <div>\n          <textarea placeholder='Enter your post' onChange={onPostChange} ref={newPostElement}\n                    value={props.newPostText}/>\n        </div>\n        <div>\n          <button onClick={onAddPost}>Add post</button>\n        </div>\n      </div>\n      <div>\n        <div className={s.posts}>\n          {postElements}\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport s from './Profile.module.css'\nimport {ProfileInfoContainer} from './ProfileInfo/ProfileInfoContainer';\nimport {MyPostsContainer} from './MyPosts/MyPostsContainer';\n\nexport const Profile = () => {\n  return (\n    <div className={s.content}>\n      <ProfileInfoContainer/>\n      <MyPostsContainer />\n    </div>\n  )\n}","import React from 'react';\n\nexport const News = () => {\n  return (\n    <div>\n      News\n    </div>\n  )\n}","import React from 'react';\n\nexport const Music = () => {\n  return (\n    <div>\n      Music\n    </div>\n  )\n}","import React from 'react';\n\nexport const Settings = () => {\n  return (\n    <div>\n      Settings\n    </div>\n  )\n}","import React from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport {UsersContainer} from './components/Users/UsersContainer';\nimport {Header} from './components/Header/Header';\nimport {SidebarContainer} from './components/Sidebar/SidebarContainer';\nimport {DialogsContainer} from './components/Dialogs/DialogsContainer';\nimport {Profile} from './components/Profile/Profile';\nimport {News} from './components/News/News';\nimport {Music} from './components/Music/Music';\nimport {Settings} from './components/Settings/Settings';\n\nexport const App = () => {\n  return (\n    <div className={'app-wrapper'}>\n      <Header/>\n      <SidebarContainer />\n      <div className={'app-wrapper-content'}>\n        <Route path=\"/dialogs\" render={() => <DialogsContainer />}/>\n        <Route path=\"/profile\" render={ () => <Profile />}/>\n        <Route path=\"/news\" render={() => <News/>}/>\n        <Route path=\"/music\" render={() => <Music/>}/>\n        <Route path=\"/settings\" render={() => <Settings/>}/>\n        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/redux-store';\nimport {App} from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </HashRouter>, document.getElementById('root')\n);\n"],"sourceRoot":""}